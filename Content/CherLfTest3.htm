<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="mc-master-page: url('Resources/TemplatePages/ApiThreeCol.flmsp');">
    <head>
        <link href="Resources/Stylesheets/PetStoreMainstyles.css" rel="stylesheet" />
    </head>
    <body>
        <h1 id="introduction">Introduction</h1>
        <p>Welcome to the Fictionsoft Kittn API! You can use our API to access Kittn API endpoints, which can get information on various cats, kittens, and breeds in our database.</p>
        <h1 id="authentication">Authentication</h1>
        <blockquote>
            <p>To authorize, use this code:</p>
        </blockquote><pre class="highlight ruby tab-ruby" xml:space="preserve"><code><span class="nb">require</span>  <span class="s1">'kittn'</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="no">Kittn</span><span class="o">::</span><span class="no">APIClient</span><span class="p">.</span><span class="nf">authorize!</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">)</span>
													</code></pre><pre class="highlight python tab-python" xml:space="preserve"><code><span class="kn">import</span>  <span class="nn">kittn</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="n">kittn</span><span class="o">.</span><span class="n">authorize</span><span class="p">(</span><span class="s">'meowmeowmeow'</span><span class="p">)</span>
													</code></pre><pre class="highlight shell tab-shell" xml:space="preserve"><code><span class="c"># With shell, you can just pass the correct header with each request</span>
															curl <span class="s2">"api_endpoint_here"</span>
															-H <span class="s2">"Authorization: meowmeowmeow"</span>
													</code></pre><pre class="highlight javascript tab-javascript" xml:space="preserve"><code><span class="kr">const</span>  <span class="nx">kittn</span>  <span class="o">=</span>  <span class="nx">require</span><span class="p">(</span><span class="s1">'kittn'</span><span class="p">);</span>  

															<span class="kd">let</span>  <span class="nx">api</span>  <span class="o">=</span>  <span class="nx">kittn</span><span class="p">.</span><span class="nx">authorize</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">);</span>
													</code></pre>
        <blockquote>
            <p>Make sure to replace <code>meowmeowmeow</code> with your API key.</p>
        </blockquote>
        <p>Kittn uses API keys to allow access to the API. You can register a new Kittn API key at our <a href="http://example.com/developers">developer portal</a>.</p>
        <p>Kittn expects for the API key to be included in all API requests to the server in a header that looks like the following:</p>
        <p><code>Authorization: meowmeowmeow</code>
        </p>
        <aside class="notice">
														You must replace <code>meowmeowmeow</code> with your personal API key.
													</aside>
        <h1 id="kittens">Kittens</h1>
        <h2 id="get-all-kittens">Get All Kittens</h2><pre class="highlight ruby tab-ruby" xml:space="preserve"><code><span class="nb">require</span>  <span class="s1">'kittn'</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="no">Kittn</span><span class="o">::</span><span class="no">APIClient</span><span class="p">.</span><span class="nf">authorize!</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">)</span>  
															<span class="n">api</span><span class="p">.</span><span class="nf">kittens</span><span class="p">.</span><span class="nf">get</span>
													</code></pre><pre class="highlight python tab-python" xml:space="preserve"><code><span class="kn">import</span>  <span class="nn">kittn</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="n">kittn</span><span class="o">.</span><span class="n">authorize</span><span class="p">(</span><span class="s">'meowmeowmeow'</span><span class="p">)</span>  
															<span class="n">api</span><span class="o">.</span><span class="n">kittens</span><span class="o">.</span><span class="n">get</span><span class="p">()</span>
													</code></pre><pre class="highlight shell tab-shell" xml:space="preserve"><code>curl <span class="s2">"http://example.com/api/kittens"</span>
															-H <span class="s2">"Authorization: meowmeowmeow"</span>
													</code></pre><pre class="highlight javascript tab-javascript" xml:space="preserve"><code><span class="kr">const</span>  <span class="nx">kittn</span>  <span class="o">=</span>  <span class="nx">require</span><span class="p">(</span><span class="s1">'kittn'</span><span class="p">);</span>  

															<span class="kd">let</span>  <span class="nx">api</span>  <span class="o">=</span>  <span class="nx">kittn</span><span class="p">.</span><span class="nx">authorize</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">);</span>  
															<span class="kd">let</span>  <span class="nx">kittens</span>  <span class="o">=</span>  <span class="nx">api</span><span class="p">.</span><span class="nx">kittens</span><span class="p">.</span><span class="nx">get</span><span class="p">();</span>
													</code></pre>
        <blockquote>
            <p>The above command returns JSON structured like this:</p>
        </blockquote><pre class="highlight json tab-json" xml:space="preserve"><code><span class="p">[</span><span class="w">   </span><span class="p">{</span><span class="w">   </span><span class="s2">"id"</span><span class="p">:</span><span class="w">   </span><span class="mi">1</span><span class="p">,</span><span class="w">   </span><span class="s2">"name"</span><span class="p">:</span><span class="w">   </span><span class="s2">"Fluffums"</span><span class="p">,</span><span class="w">   </span><span class="s2">"breed"</span><span class="p">:</span><span class="w">   </span><span class="s2">"calico"</span><span class="p">,</span><span class="w">   </span><span class="s2">"fluffiness"</span><span class="p">:</span><span class="w">   </span><span class="mi">6</span><span class="p">,</span><span class="w">   </span><span class="s2">"cuteness"</span><span class="p">:</span><span class="w">   </span><span class="mi">7</span><span class="w">   </span><span class="p">},</span><span class="w">   </span><span class="p">{</span><span class="w">   </span><span class="s2">"id"</span><span class="p">:</span><span class="w">   </span><span class="mi">2</span><span class="p">,</span><span class="w">   </span><span class="s2">"name"</span><span class="p">:</span><span class="w">   </span><span class="s2">"Max"</span><span class="p">,</span><span class="w">   </span><span class="s2">"breed"</span><span class="p">:</span><span class="w">   </span><span class="s2">"unknown"</span><span class="p">,</span><span class="w">   </span><span class="s2">"fluffiness"</span><span class="p">:</span><span class="w">   </span><span class="mi">5</span><span class="p">,</span><span class="w">   </span><span class="s2">"cuteness"</span><span class="p">:</span><span class="w">   </span><span class="mi">10</span><span class="w">   </span><span class="p">}</span><span class="w">   </span><span class="p">]</span><span class="w">   </span></code></pre>
        <p>This endpoint retrieves all kittens.</p>
        <h3 id="http-request">HTTP Request</h3>
        <p><code>GET http://example.com/api/kittens</code>
        </p>
        <h3 id="query-parameters">Query Parameters</h3>
        <table>
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Default</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>include_cats</td>
                    <td>false</td>
                    <td>If set to true, the result will also include cats.</td>
                </tr>
                <tr>
                    <td>available</td>
                    <td>true</td>
                    <td>If set to false, the result will include kittens that have already been adopted.</td>
                </tr>
            </tbody>
        </table>
        <aside class="success">
														Remember — a happy kitten is an authenticated kitten!
													</aside>
        <h2 id="get-a-specific-kitten">Get a Specific Kitten</h2><pre class="highlight ruby tab-ruby" xml:space="preserve"><code><span class="nb">require</span>  <span class="s1">'kittn'</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="no">Kittn</span><span class="o">::</span><span class="no">APIClient</span><span class="p">.</span><span class="nf">authorize!</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">)</span>  
															<span class="n">api</span><span class="p">.</span><span class="nf">kittens</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
													</code></pre><pre class="highlight python tab-python" xml:space="preserve"><code><span class="kn">import</span>  <span class="nn">kittn</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="n">kittn</span><span class="o">.</span><span class="n">authorize</span><span class="p">(</span><span class="s">'meowmeowmeow'</span><span class="p">)</span>  
															<span class="n">api</span><span class="o">.</span><span class="n">kittens</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
													</code></pre><pre class="highlight shell tab-shell" xml:space="preserve"><code>curl <span class="s2">"http://example.com/api/kittens/2"</span>
															-H <span class="s2">"Authorization: meowmeowmeow"</span>
													</code></pre><pre class="highlight javascript tab-javascript" xml:space="preserve"><code><span class="kr">const</span>  <span class="nx">kittn</span>  <span class="o">=</span>  <span class="nx">require</span><span class="p">(</span><span class="s1">'kittn'</span><span class="p">);</span>  

															<span class="kd">let</span>  <span class="nx">api</span>  <span class="o">=</span>  <span class="nx">kittn</span><span class="p">.</span><span class="nx">authorize</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">);</span>  
															<span class="kd">let</span>  <span class="nx">max</span>  <span class="o">=</span>  <span class="nx">api</span><span class="p">.</span><span class="nx">kittens</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
													</code></pre>
        <blockquote>
            <p>The above command returns JSON structured like this:</p>
        </blockquote><pre class="highlight json tab-json" xml:space="preserve"><code><span class="p">{</span><span class="w">   </span><span class="s2">"id"</span><span class="p">:</span><span class="w">   </span><span class="mi">2</span><span class="p">,</span><span class="w">   </span><span class="s2">"name"</span><span class="p">:</span><span class="w">   </span><span class="s2">"Max"</span><span class="p">,</span><span class="w">   </span><span class="s2">"breed"</span><span class="p">:</span><span class="w">   </span><span class="s2">"unknown"</span><span class="p">,</span><span class="w">   </span><span class="s2">"fluffiness"</span><span class="p">:</span><span class="w">   </span><span class="mi">5</span><span class="p">,</span><span class="w">   </span><span class="s2">"cuteness"</span><span class="p">:</span><span class="w">   </span><span class="mi">10</span><span class="w">   </span><span class="p">}</span><span class="w">   </span></code></pre>
        <p>This endpoint retrieves a specific kitten.</p>
        <aside class="warning">Inside HTML code blocks like this one, you can't use Markdown, so use <code>&lt;code&gt;</code> blocks to denote code.</aside>
        <h3 id="http-request-2">HTTP Request</h3>
        <p><code>GET http://example.com/kittens/&lt;ID&gt;</code>
        </p>
        <h3 id="url-parameters">URL Parameters</h3>
        <table>
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>ID</td>
                    <td>The ID of the kitten to retrieve</td>
                </tr>
            </tbody>
        </table>
        <h2 id="delete-a-specific-kitten">Delete a Specific Kitten</h2><pre class="highlight ruby tab-ruby" xml:space="preserve"><code><span class="nb">require</span>  <span class="s1">'kittn'</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="no">Kittn</span><span class="o">::</span><span class="no">APIClient</span><span class="p">.</span><span class="nf">authorize!</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">)</span>  
															<span class="n">api</span><span class="p">.</span><span class="nf">kittens</span><span class="p">.</span><span class="nf">delete</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
													</code></pre><pre class="highlight python tab-python" xml:space="preserve"><code><span class="kn">import</span>  <span class="nn">kittn</span>  

															<span class="n">api</span>  <span class="o">=</span>  <span class="n">kittn</span><span class="o">.</span><span class="n">authorize</span><span class="p">(</span><span class="s">'meowmeowmeow'</span><span class="p">)</span>  
															<span class="n">api</span><span class="o">.</span><span class="n">kittens</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
													</code></pre><pre class="highlight shell tab-shell" xml:space="preserve"><code>curl <span class="s2">"http://example.com/api/kittens/2"</span>
															-X DELETE
															-H <span class="s2">"Authorization: meowmeowmeow"</span>
													</code></pre><pre class="highlight javascript tab-javascript" xml:space="preserve"><code><span class="kr">const</span>  <span class="nx">kittn</span>  <span class="o">=</span>  <span class="nx">require</span><span class="p">(</span><span class="s1">'kittn'</span><span class="p">);</span>  

															<span class="kd">let</span>  <span class="nx">api</span>  <span class="o">=</span>  <span class="nx">kittn</span><span class="p">.</span><span class="nx">authorize</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">);</span>  
															<span class="kd">let</span>  <span class="nx">max</span>  <span class="o">=</span>  <span class="nx">api</span><span class="p">.</span><span class="nx">kittens</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
													</code></pre>
        <blockquote>
            <p>The above command returns JSON structured like this:</p>
        </blockquote><pre class="highlight json tab-json" xml:space="preserve"><code><span class="p">{</span><span class="w">   </span><span class="s2">"id"</span><span class="p">:</span><span class="w">   </span><span class="mi">2</span><span class="p">,</span><span class="w">   </span><span class="s2">"deleted"</span><span class="w">   </span><span class="p">:</span><span class="w">   </span><span class="s2">":("</span><span class="w">   </span><span class="p">}</span><span class="w">   </span></code></pre>
        <p>This endpoint retrieves a specific kitten.</p>
        <h3 id="http-request-3">HTTP Request</h3>
        <p><code>DELETE http://example.com/kittens/&lt;ID&gt;</code>
        </p>
        <h3 id="url-parameters-2">URL Parameters</h3>
        <table>
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>ID</td>
                    <td>The ID of the kitten to delete</td>
                </tr>
            </tbody>
        </table>
        <h1 id="errors">Errors</h1>
        <aside class="notice">This error section is stored in a separate file in `includes/_errors.md`. Slate allows you to optionally separate out your docs into many files...just save them to the `includes` folder and add them to the top of your `index.md`'s frontmatter. Files are included in the order listed.</aside>
        <p>The Kittn API uses the following error codes:</p>
        <table>
            <thead>
                <tr>
                    <th>Error Code</th>
                    <th>Meaning</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>400</td>
                    <td>Bad Request -- Your request sucks.</td>
                </tr>
                <tr>
                    <td>401</td>
                    <td>Unauthorized -- Your API key is wrong.</td>
                </tr>
                <tr>
                    <td>403</td>
                    <td>Forbidden -- The kitten requested is hidden for administrators only.</td>
                </tr>
                <tr>
                    <td>404</td>
                    <td>Not Found -- The specified kitten could not be found.</td>
                </tr>
                <tr>
                    <td>405</td>
                    <td>Method Not Allowed -- You tried to access a kitten with an invalid method.</td>
                </tr>
                <tr>
                    <td>406</td>
                    <td>Not Acceptable -- You requested a format that isn't json.</td>
                </tr>
                <tr>
                    <td>410</td>
                    <td>Gone -- The kitten requested has been removed from our servers.</td>
                </tr>
                <tr>
                    <td>418</td>
                    <td>I'm a teapot.</td>
                </tr>
                <tr>
                    <td>429</td>
                    <td>Too Many Requests -- You're requesting too many kittens! Slow down!</td>
                </tr>
                <tr>
                    <td>500</td>
                    <td>Internal Server Error -- We had a problem with our server. Try again later.</td>
                </tr>
                <tr>
                    <td>503</td>
                    <td>Service Unavailable -- We're temporarily offline for maintenance. Please try again later.</td>
                </tr>
            </tbody>
        </table>
        <div class="dark-box">
            <div class="lang-selector"><a href="#" data-language-name="shell">shell</a> <a href="#" data-language-name="ruby">ruby</a> <a href="#" data-language-name="python">python</a> <a href="#" data-language-name="javascript">javascript</a></div>
        </div>
    </body>
</html>